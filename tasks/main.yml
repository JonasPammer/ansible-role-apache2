---
# tasks file of ansible-role jonaspammer.apache2

- name: check if all variables have been set correctly
  ansible.builtin.import_tasks: assert.yml
  run_once: true
  delegate_to: localhost

### Setup/Install tasks ###
- name: include OS-specific installation and setup tasks
  ansible.builtin.include_tasks: "setup-{{ ansible_os_family }}.yml"

### Configure tasks ###
## Figure out what version of Apache is installed ##
- name: Create favicon for apache's default DocumentRoot and ensure correct mode.
  ansible.builtin.copy:
    src: "{{ apache_default_favicon }}"
    dest: /var/www/html/favicon.ico
    mode: u=rw,g=r,o=r

- name: get installed version of Apache
  ansible.builtin.command: "{{ apache__daemon_dir }}/{{ apache__daemon }} -v"
  changed_when: false
  check_mode: false
  register: _apache_version

- name: create apache_version variable
  ansible.builtin.set_fact:
    apache_version: "{{ _apache_version.stdout.split()[2].split('/')[1] }}"

- name: include Apache 2.2 variables
  ansible.builtin.include_vars: apache-22.yml
  when: "apache_version.split('.')[1] == '2'"

- name: include Apache 2.4 variables
  ansible.builtin.include_vars: apache-24.yml
  when: "apache_version.split('.')[1] == '4'"

- name: Configure Apache's ports configuration.
  ansible.builtin.lineinfile:
    dest: "{{ apache__ports_configuration_file }}"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    state: present
    mode: 0644
  with_items: "{{ apache__ports_configuration_items }}"
  notify: restart apache

- name: include OS-specific configuration tasks
  ansible.builtin.include_tasks: "configure-{{ ansible_os_family }}.yml"

- name: Ensure Apache has selected state and enabled on boot.
  ansible.builtin.service:
    name: "{{ apache__service }}"
    state: "{{ apache_state }}"
    enabled: "{{ apache_enabled }}"
